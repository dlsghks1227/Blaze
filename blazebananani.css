/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * BlazeBananani implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * blazebananani.css
 *
 * BlazeBananani stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (blazebananani_blazebananani.tpl), and to HTML elements you create dynamically
    (in blazebananani.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/
div#board
{
    width: 100%;
    max-width: 1200px;
    min-height: 800px;
    margin: auto;
    position: relative;
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: repeat(6, 1fr); }

    div#board #table, div#board div#hand, div#board .blaze-player
    {
        background-color: rgba(255, 255, 255, 0.5);
        border-radius: 5px;
        margin: 10px;
        display: flex;
        flex-flow: row;
    }
    
    div#board #table
    {
        margin: 20px;
        grid-row: 2 / span 3;
        grid-column: 5 / span 6;
    }

    div#board div#hand
    {
        justify-content: center;
        grid-row: 6;
        grid-column: 4 / span 8;
    }

    div#board .blaze-player .blaze-player-name
    {
        font-weight: bold;
    }

    div#board[data-players="3"] .blaze-player[data-pos="1"] {
        grid-row: 1;
        grid-column: 6 / span 4; }
    div#board[data-players="3"] .blaze-player[data-pos="2"] {
        grid-row: 3;
        grid-column: 11 / span 4; }
    div#board[data-players="3"] .blaze-player[data-pos="3"] {
        grid-row: 3;
        grid-column: 1 / span 4; }
    

    div#board[data-players="4"] .blaze-player[data-pos="1"] {
        grid-row: 1;
        grid-column: 6 / span 4; }
    div#board[data-players="4"] .blaze-player[data-pos="2"] {
        grid-row: 3;
        grid-column: 11 / span 4; }
    div#board[data-players="4"] .blaze-player[data-pos="3"] {
        grid-row: 3;
        grid-column: 1 / span 4; }
    div#board[data-players="4"] .blaze-player[data-pos="4"] {
        grid-row: 5;
        grid-column: 6 / span 4; }